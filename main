
local Players = game:GetService("Players")
local Webhook = "https://discord.com/api/webhooks/881712729755373649/G7VLNM6HvYZZkXuW_NLrG3-6P9opX-uGDAOkEcyNXQd9_j5tPoFCa0r9D1qvvAyssJvR"

local success, err = pcall(function()
	task.wait()
	if game.PlaceId ~= 3541987450 then
		return
	end
	rconsoleprint('@@BLUE@@')
	rconsolename("lostics little cat boy collector tool")

	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local ServerInfo = ReplicatedStorage:WaitForChild("ServerInfo")
	local Player = game.Players.LocalPlayer
	local Servers = ServerInfo:GetChildren()
	local UIS = game:GetService("UserInputService")
	local RandomServer = Servers[math.random(1, #Servers)]
	local CollectorLocation
	local Sent = false
	local HttpService = game:GetService("HttpService")
	local FoundCollector = false
	local CheckTimes = 0
	local Reason = "nil"

	while task.wait() and true do
		if Players and Players.LocalPlayer and ReplicatedStorage:FindFirstChild("Requests") and ReplicatedStorage:FindFirstChild("ServerInfo") and game:IsLoaded() and Players.LocalPlayer:FindFirstChild("PlayerGui") and Players.LocalPlayer.PlayerGui:FindFirstChild("StartMenu") and Players.LocalPlayer.PlayerGui.StartMenu:FindFirstChild("Finish") then
			break
		end
	end
    local function NewServer()
		RandomServer = Servers[math.random(1, #Servers)]
	end

    local function ServerHop()
		if FoundCollector == false then
			if string.lower(RandomServer.Name) == tostring(game.JobId) then
				NewServer()
				game.ReplicatedStorage:WaitForChild("Requests").JoinPublicServer:FireServer(string.lower(RandomServer.Name))
			else
				game.ReplicatedStorage:WaitForChild("Requests").JoinPublicServer:FireServer(string.lower(RandomServer.Name))
			end
			rconsoleprint('\nServer hopping...' .. "\nNew Server: " .. game.JobId .. " (" .. tostring(RandomServer.ServerName.Value) .. ")")
		else
			return
		end
	end

    local function SendToWebhook()
		local content_body = HttpService:JSONEncode({
			username = "meow collector";
			content  = tostring("@everyone " .. Player.Name .. " found a collector!" .. "\nUse this to join: ```game.ReplicatedStorage:WaitForChild('Requests').JoinPublicServer:FireServer('" .. game.JobId .. "')```" .. "\nLocation: " .. tostring(CollectorLocation));
		})
		if syn.request and typeof(syn.request) == "function" then
			syn.request({
				Url = Webhook;
				Method = "POST";
				Body = content_body;
				Headers = {
					["Content-Type"] = "application/json"
				}
			})
		else
			game:HttpPost(Webhook, content_body, false, "application/json")
		end
	end

	local function IdentifyCollector()
		if not Player.Character:FindFirstChild("Immortal") then
			CheckTimes = CheckTimes + 1
			for i, v in pairs(workspace:GetDescendants()) do
				if v:IsA("Part") and v.Name == "Part" then
					if v:FindFirstChild("Exit") then
						if v.BrickColor == BrickColor.new("Fawn brown") and v.Transparency == 1 and Sent == false then
							FoundCollector = true
							CollectorLocation = "Desert"
							SendToWebhook()
							Sent = true
						end
						if v.BrickColor == BrickColor.new("Bronze") and v.Transparency == 1 and Sent == false then
							FoundCollector = true
							CollectorLocation = "Jungle"
							SendToWebhook()
							Sent = true
						end
						if v.BrickColor == BrickColor.new("Smoky grey") and v.Transparency == 1 and Sent == false then
							FoundCollector = true
							CollectorLocation = "Plains"
							SendToWebhook()
							Sent = true
						end
						if v.BrickColor == BrickColor.new("Dark stone grey") and v.Transparency == 1 and Sent == false then
							FoundCollector = true
							CollectorLocation = "Beach"
							SendToWebhook()
							Sent = true
						end
					end
				end
			end
		end
	end

	local function CheckNearPlayers()
		pcall(function()
			for i, v in pairs(Players:GetChildren()) do
				if v ~= Players.LocalPlayer and 300 > (v.Character.HumanoidRootPart.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude then
					Reason = "Player too close"
					task.wait(0.3)
					ServerHop()
				end
			end
		end)
	end

	local function GetOutOfFF()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0)
	end

	task.wait(3)
	firesignal(Player.PlayerGui:WaitForChild("StartMenu"):WaitForChild("Choices"):WaitForChild("Play", math.huge).MouseButton1Click)
	task.wait(0.7)
	CheckNearPlayers()
	local checkagain = 0
	while checkagain < 14 do
		task.wait(0.5)
		checkagain = checkagain + 1
		CheckNearPlayers()
	end
	task.wait(6.5)
	GetOutOfFF()
	while CheckTimes < 6 do
		task.wait(2)
		CheckNearPlayers()
		IdentifyCollector()
	end

	if (FoundCollector == false) then
		Reason = "No Collector In Server"
		task.wait(0.1)
		ServerHop()
	end
	Player.OnTeleport:Connect(function(State, PlaceId, Spawn)
		if State.Name == "Failed" then
			rconsoleprint('@@RED@@')
			rconsoleprint("\nServer hop failed...")
			rconsoleprint('@@BLUE@@')
			task.delay(math.random(5, 6), function()
				NewServer()
				ServerHop()
			end, math.random(5, 6))
		end
		if State.Name == "InProgress" then
			rconsoleprint('@@GREEN@@')
			rconsoleprint("\nServer hop success...".."("..tostring(Reason)..")")
			rconsoleprint('@@BLUE@@')
		end
	end)
end)

if err then
	rconsoleprint('@@RED@@')
	rconsoleprint("\nReport to Lostic: " .. tostring(err))
	rconsoleprint('@@BLUE@@')
end
